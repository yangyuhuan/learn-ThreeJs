{"id":"../node_modules/gasp/index.js","dependencies":[{"name":"D:\\my\\myGithub\\learn-ThreeJs\\laochen-three\\01-THREE-BASIC\\package.json","includedInParent":true,"mtime":1660544539851},{"name":"D:\\my\\myGithub\\learn-ThreeJs\\laochen-three\\01-THREE-BASIC\\node_modules\\gasp\\package.json","includedInParent":true,"mtime":1660544519481},{"name":"q","loc":{"line":1,"column":16,"index":16},"parent":"D:\\my\\myGithub\\learn-ThreeJs\\laochen-three\\01-THREE-BASIC\\node_modules\\gasp\\index.js","resolved":"D:\\my\\myGithub\\learn-ThreeJs\\laochen-three\\01-THREE-BASIC\\node_modules\\q\\q.js"}],"generated":{"js":"var Q = require(\"q\");\n\nmodule.exports = gasp;\n\nfunction gasp (task, interval) {\n    if (!task) {\n        throw new Error(\"No task specified.\");\n    }\n    var deferred, timeout, args, savedArgs,\n        inProgress = false;\n\n    if (typeof interval === \"undefined\") {\n        interval = 50;\n    }\n\n    // This function accepts the arguments that will be passed to the task function\n    function gasped () {\n        if(!inProgress) {\n            args = Array.prototype.slice.call(arguments,0);\n        } else {\n            savedArgs = Array.prototype.slice.call(arguments,0);\n        }\n\n        if(!timeout) {\n            // reset the deferred and the timeout\n            deferred = Q.defer();\n            timeout = setTimeout(function () {\n                if(inProgress === true) {\n                    // then we are colliding with a previous gasp.\n                    args = savedArgs;\n                    if (gasped.delegate && typeof gasped.delegate.willCollideWithPreviousGasp === \"function\") {\n                        gasped.delegate.willCollideWithPreviousGasp.call(null, gasped, args);\n                    }\n                    clearTimeout(timeout);\n                    timeout = null;\n                    inProgress = false;\n                    return;\n                } else {\n                    inProgress = true;\n                }\n\n                // notify delegate\n                if (gasped.delegate && typeof gasped.delegate.willGasp === \"function\") {\n                    gasped.delegate.willGasp.call(null, gasped, args);\n                }\n                clearTimeout(timeout);\n                timeout = null;\n                Q.fcall(function () {\n                    return task.apply(this, args);\n                })\n                .then(function () {\n                    deferred.resolve(true);\n                }).fail(function (reason) {\n                    deferred.reject(reason);\n                })\n                .finally(function () {\n                    inProgress = false;\n                    args = savedArgs;\n                })\n                .done();\n            }, interval);\n        }\n\n        return deferred.promise;\n    }\n    return gasped;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/gasp/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/gasp/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}}],"sources":{"../node_modules/gasp/index.js":"var Q = require(\"q\");\n\nmodule.exports = gasp;\n\nfunction gasp (task, interval) {\n    if (!task) {\n        throw new Error(\"No task specified.\");\n    }\n    var deferred, timeout, args, savedArgs,\n        inProgress = false;\n\n    if (typeof interval === \"undefined\") {\n        interval = 50;\n    }\n\n    // This function accepts the arguments that will be passed to the task function\n    function gasped () {\n        if(!inProgress) {\n            args = Array.prototype.slice.call(arguments,0);\n        } else {\n            savedArgs = Array.prototype.slice.call(arguments,0);\n        }\n\n        if(!timeout) {\n            // reset the deferred and the timeout\n            deferred = Q.defer();\n            timeout = setTimeout(function () {\n                if(inProgress === true) {\n                    // then we are colliding with a previous gasp.\n                    args = savedArgs;\n                    if (gasped.delegate && typeof gasped.delegate.willCollideWithPreviousGasp === \"function\") {\n                        gasped.delegate.willCollideWithPreviousGasp.call(null, gasped, args);\n                    }\n                    clearTimeout(timeout);\n                    timeout = null;\n                    inProgress = false;\n                    return;\n                } else {\n                    inProgress = true;\n                }\n\n                // notify delegate\n                if (gasped.delegate && typeof gasped.delegate.willGasp === \"function\") {\n                    gasped.delegate.willGasp.call(null, gasped, args);\n                }\n                clearTimeout(timeout);\n                timeout = null;\n                Q.fcall(function () {\n                    return task.apply(this, args);\n                })\n                .then(function () {\n                    deferred.resolve(true);\n                }).fail(function (reason) {\n                    deferred.reject(reason);\n                })\n                .finally(function () {\n                    inProgress = false;\n                    args = savedArgs;\n                })\n                .done();\n            }, interval);\n        }\n\n        return deferred.promise;\n    }\n    return gasped;\n}\n"},"lineCount":68}},"error":null,"hash":"fb21f22bc2708adb005ea789d5a0933b","cacheData":{"env":{}}}